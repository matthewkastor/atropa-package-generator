{
  "name": "directory-transform",
  "version": "0.1.1",
  "description": "A node module for copying directories and running transforms over file contents, file names, and folder names.",
  "main": "./src/directory-transform.js",
  "directories": {
    "lib": "src",
    "doc": "docs",
    "example": "examples"
  },
  "devDependencies": {
    "atropa-jsformatter": ">=0.1.2",
    "atropa-jslint": ">=0.1.2",
    "jasmine-node": ">=1.11.0",
    "jsdoc-toolkit": "git+https://github.com/matthewkastor/node-jsdoc-toolkit.git#fix-tests"
  },
  "scripts": {
    "test": "jasmine-node specs/",
    "buildDocs": "jsdoc-toolkit -v -d=./docs/jsdoc/ -r -s src/",
    "lint": "atropa-jslint ./src/directory-transform.js",
    "srcFormat": "atropa-jsformatter ./src/directory-transform.js ./src/directory-transform.js"
  },
  "homepage": "https://github.com/matthewkastor/directory-transform/",
  "bugs": {
    "url": "https://github.com/matthewkastor/directory-transform/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/matthewkastor/directory-transform.git"
  },
  "keywords": [
    "directory-transform",
    "atropa"
  ],
  "author": {
    "name": "Matthew Kastor",
    "email": "matthewkastor@gmail.com",
    "url": "https://plus.google.com/100898583798552211130"
  },
  "licenses": [
    {
      "type": "gpl-3.0",
      "url": "http://www.gnu.org/licenses/gpl-3.0-standalone.html"
    }
  ],
  "dependencies": {
    "dir-stats-sync": ">=0.1.0",
    "stream-copy-file": ">=0.1.0"
  },
  "readme": "# directory-transform\r\n\r\nA node module for copying directories and running transforms over file contents,\r\n file names, and folder names.\r\n\r\n## Installation\r\n\r\n```\r\nnpm install directory-transform\r\n```\r\n\r\n## Usage\r\n\r\nIn node:\r\n\r\n```\r\n// Transforming a directory recursively using mustache.\r\n\r\n// this example is in the examples directory with plenty of comments.\r\nvar customName = process.argv[2];\r\nvar directoryTransform = require('directory-transform');\r\nvar transformFns = {\r\n    onFile : function transformFns_onFile (infile, outfile) {\r\n        \"use strict\";\r\n        function camelize (str) {\r\n            return str.replace(/[^a-zA-Z0-9_]+./g, function (match) {\r\n                return match[1].toUpperCase();\r\n            });\r\n        }\r\n        var mustache = require('mustache');\r\n        var fs = require('fs');\r\n        var content;\r\n        var view = {\r\n            customName : customName\r\n        };\r\n        view.camelizedCustomName = camelize(view.customName);\r\n        try {\r\n            content = fs.readFileSync(infile, \"utf8\");\r\n            content = mustache.render(content, view);\r\n            outfile = mustache.render(outfile, view);\r\n            fs.writeFileSync(outfile, content, {\r\n                flag : 'w',\r\n                mode : fs.statSync(infile).mode\r\n            });\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n};\r\ndirectoryTransform(\r\n        './aDirectory/',\r\n        './' + customName,\r\n        transformFns,\r\n        true,\r\n        false\r\n    );\r\n```\r\n\r\nFull documentation is available in the docs folder.\r\n",
  "readmeFilename": "Readme.md",
  "_id": "directory-transform@0.1.1",
  "_from": "directory-transform@>=0.1.0"
}
